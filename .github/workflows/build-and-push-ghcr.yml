name: Build and Push SillyTavern to GHCR

# 工作流触发条件
on:
  push:
    branches:
      - main  # 当代码推送到 main 分支时触发
    tags:
      - 'v*'   # 当创建 v 开头的标签时触发 (例如 v1.0, v1.0.1)

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 使用 GitHub 托管的 Linux 运行器，它包含 Docker 环境
    permissions:
      contents: read      # 允许 Actions 检出您的代码
      packages: write     # 允许 Actions 将 Docker 镜像写入 GHCR

    steps:
    # 第1步：检出您的仓库代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 第2步：登录到 GitHub Container Registry
    # 'username' 会自动使用您的 GitHub 用户名 (Silentforfar)
    # 'password' 使用 GITHUB_TOKEN，它由 GitHub Actions 自动提供并授权
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 第3步：为 Docker 提取元数据 (如标签和标注)
    # 'images' 指定了镜像在 GHCR 上的完整名称
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/sillytavern # 您的镜像名称是 sillytavern

    # 第4步：构建 Docker 镜像并推送到 GHCR
    # 'context: .' 表示 Dockerfile 在仓库的根目录
    # 'push: true' 表示如果构建成功则推送镜像
    # 'tags' 和 'labels' 从上一步 'meta' 中获取
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
